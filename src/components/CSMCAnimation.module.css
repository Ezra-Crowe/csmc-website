.svg {
  background-color: var(--color-obiesource-foreground);
  width: min(80vh, 90vw);
  height: min(80vh, 90vw);
}

.svgAnimationBefore {
  composes: svg;
  --x-start: 4%;
  --x-end: 72%;
  --y: 30%;
  --y-start: var(--y);
  --y-end: calc(var(--y));
  --scale: 1.95;
}

.svgAnimationAfter {
  composes: svg;
  --x: 0%;
  --x-start: var(--x);
  --x-end: calc(var(--x));
  --y-start: 25%;
  --y-end: 85%;
  --scale: 1;
}

.text {
  fill: var(--color-obiesource-txt);
  font-size: 18px;
}

.transformInterpolate {
  transform: translate(
      calc(var(--x-start) + var(--frac) * (var(--x-end) - var(--x-start))),
      calc(var(--y-start) + var(--frac) * (var(--y-end) - var(--y-start)))
    )
    scale(var(--scale));
}

.csmcTransition {
  composes: transformInterpolate;
  transition: transform 0.8s cubic-bezier(0.45, 0, 0.55, 1);
}

.csmcTransition text {
  fill: var(--color-oberlin-red1);
}

.otherLetter {
  transform: translate(
      calc(var(--x-start) + var(--x-frac) * (var(--x-end) - var(--x-start))),
      calc(var(--y-start) + var(--y-frac) * (var(--y-end) - var(--y-start)))
    )
    scale(var(--scale)) translate(-100%, 0);
  --x-end: 100%;
  --x-frac: calc((1 + var(--letter-x)) / (var(--word-length) - 1 + 1));
  --y-frac: calc(var(--letter-y) / (var(--lines) - 1));
  animation: otherLetterSlideIn 0.5s forwards;
  animation-delay: calc(
    0.3s + var(--letter-x) * 0.15s + var(--letter-y) * 0.6s
  );
}

.svgAnimationBefore .otherLetter {
  display: none;
}

@keyframes otherLetterSlideIn {
  0% {
    transform: translate(
        calc(var(--x-start) + var(--x-frac) * (var(--x-end) - var(--x-start))),
        calc(var(--y-start) + var(--y-frac) * (var(--y-end) - var(--y-start)))
      )
      scale(var(--scale)) translate(-100%, 0);
  }

  100% {
    transform: translate(
        calc(var(--x-start) + var(--x-frac) * (var(--x-end) - var(--x-start))),
        calc(var(--y-start) + var(--y-frac) * (var(--y-end) - var(--y-start)))
      )
      scale(var(--scale));
  }
}
